[{"/Users/guggenz/Dev/Projects/portfolio-2021/src/App.js":"1","/Users/guggenz/Dev/Projects/portfolio-2021/src/components/Nav.js":"2","/Users/guggenz/Dev/Projects/portfolio-2021/src/sections/Work.js":"3","/Users/guggenz/Dev/Projects/portfolio-2021/src/sections/Skills.js":"4","/Users/guggenz/Dev/Projects/portfolio-2021/src/components/Job.js":"5","/Users/guggenz/Dev/Projects/portfolio-2021/src/utils/info.js":"6","/Users/guggenz/Dev/Projects/portfolio-2021/src/sections/Projects.js":"7","/Users/guggenz/Dev/Projects/portfolio-2021/src/components/Project.js":"8","/Users/guggenz/Dev/Projects/portfolio-2021/src/components/Skill.js":"9"},{"size":2498,"mtime":1627702323670,"results":"10","hashOfConfig":"11"},{"size":8367,"mtime":1611181131304,"results":"12","hashOfConfig":"11"},{"size":727,"mtime":1627700401719,"results":"13","hashOfConfig":"11"},{"size":5101,"mtime":1627702757255,"results":"14","hashOfConfig":"11"},{"size":1370,"mtime":1627701067410,"results":"15","hashOfConfig":"11"},{"size":19747,"mtime":1637722900472,"results":"16","hashOfConfig":"11"},{"size":1139,"mtime":1627701350333,"results":"17","hashOfConfig":"11"},{"size":4999,"mtime":1627701199611,"results":"18","hashOfConfig":"11"},{"size":362,"mtime":1627701943530,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"l7inmc",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},"/Users/guggenz/Dev/Projects/portfolio-2021/src/App.js",["41","42","43"],"import React, {useEffect, useState} from 'react'\n\n//Components\nimport AboutMe from './sections/AboutMe';\nimport Header from './sections/Header'\nimport Nav from './components/Nav'\nimport Work from './sections/Work'\nimport Skills from './sections/Skills'\nimport Projects from './sections/Projects'\nimport Blob from './components/Blob'\nimport Contact from './sections/Contact'\n\nimport './App.scss';\n\n\nconst App = () => {\n\n\n\n  function getWindowDimensions() {\n\n\n    const { outerWidth: width, outerHeight: height } = window;\n\n    return {\n      width,\n      height\n    };\n  } \n\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions())\n\n  useEffect(() => {\n    function handleResize() {\n        setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    document.addEventListener('gesturestart', function (e) {\n      e.preventDefault();\n    });\n\n    return () => {\n      document.removeEventListener('gesturestart', function (e) {\n        e.preventDefault();\n      })\n    }\n  }, [])\n\n\n  //Scroll Fader\n  const fadeOptions = {\n    root: null,\n    threshold: [0, .1, .15, .2, .9, 1],\n    rootMargin: \"5%\"\n  }\n\n  const headerScrollFade = (entry) => {\n    if (entry.intersectionRatio > .9) {\n      entry.target.style.opacity = 1\n      entry.target.style.transform = 'translate(0px, 0px)'\n\n      return\n    } else {\n      entry.target.style.opacity = 0\n      entry.target.style.transform = 'translate(0px, -50px)'\n\n      return\n    }\n  }\n\n  const createScrollFaders = () => {\n    const scrollFader = new IntersectionObserver(\n      (entries, scrollFade) => {\n        entries.forEach(entry => {\n          if (entry.target.id === 'header_box') {\n            headerScrollFade(entry)\n          }\n      })\n    }, fadeOptions)\n\n    scrollFader.observe(document.getElementById('header_box'))\n    scrollFader.observe(document.getElementById('blob-wrapper'))\n  }\n\n  useEffect(() => {\n    return createScrollFaders()\n  }, [])\n\n\n  \n  return (\n    <div className=\"App\">\n      \n      <Nav/>\n      <Header\n        width={windowDimensions.width}\n        height={windowDimensions.height}\n      />\n\n      <div className=\"section-wrapper\">\n        <Work/>\n        <Skills/>\n        <Projects/>\n      </div>\n\n      <Contact\n        width={windowDimensions.width}\n        height={windowDimensions.height}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/guggenz/Dev/Projects/portfolio-2021/src/components/Nav.js",["44","45"],"import React, {useState, Fragment} from 'react'\n\nimport headshot from '../assets/mike-headshot.jpeg'\n\nconst Nav = () => {\n    const [active, setActive] = useState(false)\n\n    const toggleNav = () => {\n        setActive(!active)\n    }\n\n    const links = [\n        {href: '#work', color: '#4657a3', text: 'Work'},\n        {href: '#skills', color: '#3f4e91', text: 'Skills'},\n        {href: '#projects', color: '#323e72', text: 'Projects'},\n        {href: '#contact', color: '#1f2649', text: 'Contact'},\n    ]\n\n    return (\n        <Fragment>\n            <div className=\"nav navFront\" id=\"navFront\">\n\n                <div className=\"leftNav btn\">\n                    <a \n                        className=\"leftNav_headshot\"\n                        target=\"_blank\"\n                        href=\"https://www.linkedin.com/in/mike-guggenbuehl/\"\n                    >\n                        <div\n                            className=\"leftNav_bg\"\n                        />\n                        <div className=\"headshot_wrap\">\n                            <img\n                                alt=\"img\"\n                                src={headshot}\n                                className=\"headshot\"\n                            />\n                        </div>\n                    </a>\n                </div>\n\n                <div className=\"rightNav\">\n                    <div \n                        className=\"toggle btn\"\n                        onClick={() => toggleNav()}\n                    >\n                        <div \n                            className=\"toggle_bullet\"\n                            style={{\n                                left: 0,\n                                right: 0,\n                                margin: 'auto auto',\n                                marginLeft: 10,\n                                width: active ? 40 : 10,\n                                height: active ? 5 : 10,\n                                opacity: active ? 1 : .7,\n                                transform: active\n                                    ? 'rotate(45deg)'\n                                    : 'rotate(0deg)'\n                            }}\n                        />\n                        <div \n                            className=\"toggle_bullet\"\n                            style={{\n                                opacity: active ? 0 : .7\n                            }}\n                        />\n                        <div \n                            className=\"toggle_bullet\"\n                            style={{\n                                left: 0,\n                                right: 0,\n                                margin: 'auto auto',\n                                marginRight: 10,\n                                opacity: active ? 1 : .7,\n                                width: active ? 40 : 10,\n                                height: active ? 5 : 10,\n                                transform: active\n                                    ? 'rotate(-45deg)'\n                                    : 'rotate(0deg)'\n                            }}\n                        />\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"nav navBack\" id=\"navBack\">\n                <div className=\"leftNav btn\">\n                    <div\n                        className=\"leftNav_headshot\"\n                    >\n                        <div\n                            className=\"leftNav_bg\"\n                        />\n                        <div className=\"headshot_wrap\">\n                            <img\n                                // alt=\"img\"\n                                // src={headshot}\n                                className=\"headshot\"\n                            />\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"rightNav\">\n                    <div className=\"toggle btn\">\n                        <div \n                            className=\"toggle_bullet\"\n                            style={{\n                                left: 0,\n                                right: 0,\n                                top: 0,\n                                bottom: 0,\n                                margin: 'auto auto',\n                                marginLeft: 10,\n                                width: active ? 40 : 10,\n                                transform: active\n                                    ? 'rotate(45deg)'\n                                    : 'rotate(0deg)'\n                            }}\n                        />\n                        <div \n                            className=\"toggle_bullet\"\n                            style={{\n                                opacity: active ? 0 : .7,\n                                position: 'absolute',\n                                top: 0,\n                                left: 0,\n                                right: 0,\n                                bottom: 0,\n                                margin: 'auto auto'\n                            }}\n                        />\n                        <div \n                            className=\"toggle_bullet\"\n                            style={{\n                                left: 0,\n                                right: 0,\n                                top: 0,\n                                bottom: 0,\n                                margin: 'auto auto',\n                                marginRight: 10,\n                                width: active ? 40 : 10,\n                                transform: active\n                                    ? 'rotate(-45deg)'\n                                    : 'rotate(0deg)'\n                            }}\n                        />\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"navMenu\">\n                <div>\n                    <div \n                        className=\"filler\"\n                        style={{\n                            transition: 'transform .2s',\n                            transform: active ? 'rotate(44deg)' : 'rotate(0deg)'\n                        }}\n                    />\n\n                    {\n                        links.map((i , index) => {\n                            return (\n                                <a\n                                    className=\"link\"\n                                    style={{\n                                        transition: `transform ${.3 + (index * .1)}s`,\n                                        transform: active ? `rotate(${50 + (index*5)}deg)` : 'rotate(0deg)',\n                                        width: 225 / Math.cos((Math.PI / 180) * (50 + (index*5))),\n                                        zIndex: 199 - index,\n                                        background: i.color,\n                                        paddingRight: (index * 15) + 40,\n                                        paddingBottom: index + 2\n                                    }}\n                                    href={i.href}\n                                    onClick={() => toggleNav()}\n                                    key={`nav-${i.text}`}\n                                >\n                                    {i.text}\n                                </a>\n                            )\n                            \n                        })\n                    }\n\n                    {\n                        <div\n                            style={{\n                                height: '100%',\n                                width: '100%',\n                                position: 'fixed',\n                                background: 'black',\n                                top: 0,\n                                left: 0,\n                                zIndex: 100,\n                                pointerEvents: active ? 'auto' : 'none',\n                                opacity: active ? .7 : 0,\n                                backdropFilter: 'blur(5px)'                            \n                            }}\n                            className=\"bg-overlay\"\n                            onClick={() => toggleNav()}\n                        >\n\n                        </div>\n                    }\n\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default Nav","/Users/guggenz/Dev/Projects/portfolio-2021/src/sections/Work.js",["46"],"/Users/guggenz/Dev/Projects/portfolio-2021/src/sections/Skills.js",["47"],"/Users/guggenz/Dev/Projects/portfolio-2021/src/components/Job.js",[],"/Users/guggenz/Dev/Projects/portfolio-2021/src/utils/info.js",[],"/Users/guggenz/Dev/Projects/portfolio-2021/src/sections/Projects.js",["48"],"/Users/guggenz/Dev/Projects/portfolio-2021/src/components/Project.js",[],"/Users/guggenz/Dev/Projects/portfolio-2021/src/components/Skill.js",["49"],"import React from 'react'\n\nconst Skill = (props) => (\n    <div className=\"category\" key={`category-${props.title}`}>\n        <div className=\"category_icon\">\n            <img\n                className=\"icon\"\n                src={props.img}\n            />\n        </div>\n        <div className=\"category_name\">{props.title}</div>\n    </div>\n)\n\nexport default Skill",{"ruleId":"50","severity":1,"message":"51","line":4,"column":8,"nodeType":"52","messageId":"53","endLine":4,"endColumn":15},{"ruleId":"50","severity":1,"message":"54","line":10,"column":8,"nodeType":"52","messageId":"53","endLine":10,"endColumn":12},{"ruleId":"55","severity":1,"message":"56","line":93,"column":6,"nodeType":"57","endLine":93,"endColumn":8,"suggestions":"58"},{"ruleId":"59","severity":1,"message":"60","line":26,"column":25,"nodeType":"61","endLine":26,"endColumn":40},{"ruleId":"62","severity":1,"message":"63","line":96,"column":29,"nodeType":"64","endLine":100,"endColumn":31},{"ruleId":null,"fatal":true,"severity":2,"message":"65","line":5,"column":1},{"ruleId":"50","severity":1,"message":"66","line":1,"column":26,"nodeType":"52","messageId":"53","endLine":1,"endColumn":34},{"ruleId":"50","severity":1,"message":"67","line":7,"column":9,"nodeType":"52","messageId":"53","endLine":7,"endColumn":15},{"ruleId":"62","severity":1,"message":"63","line":6,"column":13,"nodeType":"64","endLine":9,"endColumn":15},"no-unused-vars","'AboutMe' is defined but never used.","Identifier","unusedVar","'Blob' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'createScrollFaders'. Either include it or remove the dependency array.","ArrayExpression",["68"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Parsing error: Unexpected token\n\n  3 | import {jobs}\n  4 | \n> 5 | const Work = () => (\n    | ^\n  6 |     <section className=\"work\" id=\"work\">\n  7 |         <div className=\"sectionTitle\">\n  8 |             Work","'Fragment' is defined but never used.","'skills' is defined but never used.",{"desc":"69","fix":"70"},"Update the dependencies array to be: [createScrollFaders]",{"range":"71","text":"72"},[2077,2079],"[createScrollFaders]"]